[{"/home/developer/Downloads/Todo_user_list/src/index.tsx":"1","/home/developer/Downloads/Todo_user_list/src/reportWebVitals.ts":"2","/home/developer/Downloads/Todo_user_list/src/App.tsx":"3","/home/developer/Downloads/Todo_user_list/src/components/Post/Post.tsx":"4","/home/developer/Downloads/Todo_user_list/src/components/Comment/Comment.tsx":"5","/home/developer/Downloads/Todo_user_list/src/components/Todo/Todo.tsx":"6","/home/developer/Downloads/Todo_user_list/src/components/Users/EditUserModal.tsx":"7","/home/developer/Downloads/Todo_user_list/src/components/Users/AddUserModal.tsx":"8","/home/developer/Downloads/Todo_user_list/src/components/Users/Users.tsx":"9","/home/developer/Downloads/Todo_user_list/src/Redux/store.tsx":"10","/home/developer/Downloads/Todo_user_list/src/Redux/reducers/rootReducer.ts":"11","/home/developer/Downloads/Todo_user_list/src/Redux/reducers/reducers.ts":"12","/home/developer/Downloads/Todo_user_list/src/Redux/actionsType/actionsType.ts":"13","/home/developer/Downloads/Todo_user_list/src/Redux/actions/actions.ts":"14"},{"size":786,"mtime":1688552558134,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1688397536000,"results":"17","hashOfConfig":"16"},{"size":2344,"mtime":1688622578550,"results":"18","hashOfConfig":"16"},{"size":4235,"mtime":1688622175759,"results":"19","hashOfConfig":"16"},{"size":1675,"mtime":1688621064662,"results":"20","hashOfConfig":"16"},{"size":3739,"mtime":1688622625323,"results":"21","hashOfConfig":"16"},{"size":4420,"mtime":1688397536000,"results":"22","hashOfConfig":"16"},{"size":4108,"mtime":1688620802531,"results":"23","hashOfConfig":"16"},{"size":7792,"mtime":1688621817685,"results":"24","hashOfConfig":"16"},{"size":224,"mtime":1688555903155,"results":"25","hashOfConfig":"16"},{"size":408,"mtime":1688620589764,"results":"26","hashOfConfig":"16"},{"size":5273,"mtime":1688619558413,"results":"27","hashOfConfig":"16"},{"size":896,"mtime":1688566718028,"results":"28","hashOfConfig":"16"},{"size":3711,"mtime":1688622791586,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"w97v9g",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/developer/Downloads/Todo_user_list/src/index.tsx",[],[],[],"/home/developer/Downloads/Todo_user_list/src/reportWebVitals.ts",[],[],"/home/developer/Downloads/Todo_user_list/src/App.tsx",["74","75","76","77"],[],"/home/developer/Downloads/Todo_user_list/src/components/Post/Post.tsx",[],[],"/home/developer/Downloads/Todo_user_list/src/components/Comment/Comment.tsx",[],[],"/home/developer/Downloads/Todo_user_list/src/components/Todo/Todo.tsx",[],[],"/home/developer/Downloads/Todo_user_list/src/components/Users/EditUserModal.tsx",["78"],[],"import React, { Component, ChangeEvent, FormEvent } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  phone: string;\r\n  email: string;\r\n  username: string;\r\n}\r\n\r\ninterface EditUserModalProps {\r\n  user: User;\r\n  onUpdateUser: (user: User) => void;\r\n}\r\n\r\ninterface EditUserModalState {\r\n  name: string;\r\n  phone: string;\r\n  email: string;\r\n  username: string;\r\n}\r\n\r\nclass EditUserModal extends Component<EditUserModalProps, EditUserModalState> {\r\n  state: EditUserModalState = {\r\n    name: this.props.user.name,\r\n    phone: this.props.user.phone,\r\n    email: this.props.user.email,\r\n    username: this.props.user.username,\r\n  };\r\n\r\n  handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value } as Pick<EditUserModalState, keyof EditUserModalState>);\r\n  };\r\n\r\n  handleSubmit = (event: FormEvent) => {\r\n    event.preventDefault();\r\n    const { name, phone, email, username } = this.state;\r\n    const { user } = this.props;\r\n\r\n    const updatedUser: User = {\r\n      ...user,\r\n      name,\r\n      phone,\r\n      email,\r\n      username,\r\n    };\r\n\r\n    this.props.onUpdateUser(updatedUser);\r\n  };\r\n\r\n  render() {\r\n    const { name, phone, email, username } = this.state;\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"modal fade\"\r\n        id={`editUserModal-${user.id}`}\r\n        tabIndex={-1}\r\n        aria-labelledby={`editUserModalLabel-${user.id}`}\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id={`editUserModalLabel-${user.id}`}>\r\n                Edit User\r\n              </h5>\r\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor={`editName-${user.id}`} className=\"form-label\">\r\n                    Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id={`editName-${user.id}`}\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor={`editPhone-${user.id}`} className=\"form-label\">\r\n                    Phone\r\n                  </label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    className=\"form-control\"\r\n                    id={`editPhone-${user.id}`}\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor={`editEmail-${user.id}`} className=\"form-label\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id={`editEmail-${user.id}`}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor={`editUsername-${user.id}`} className=\"form-label\">\r\n                    Username\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id={`editUsername-${user.id}`}\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={this.handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Update\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUserModal;\r\n","/home/developer/Downloads/Todo_user_list/src/components/Users/AddUserModal.tsx",[],[],"/home/developer/Downloads/Todo_user_list/src/components/Users/Users.tsx",[],[],"/home/developer/Downloads/Todo_user_list/src/Redux/store.tsx",[],[],"/home/developer/Downloads/Todo_user_list/src/Redux/reducers/rootReducer.ts",[],[],"/home/developer/Downloads/Todo_user_list/src/Redux/reducers/reducers.ts",[],[],"/home/developer/Downloads/Todo_user_list/src/Redux/actionsType/actionsType.ts",[],[],"/home/developer/Downloads/Todo_user_list/src/Redux/actions/actions.ts",[],[],{"ruleId":"79","severity":1,"message":"80","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"83","line":8,"column":10,"nodeType":"81","messageId":"82","endLine":8,"endColumn":19},{"ruleId":"79","severity":1,"message":"84","line":10,"column":11,"nodeType":"81","messageId":"82","endLine":10,"endColumn":23},{"ruleId":"79","severity":1,"message":"85","line":14,"column":11,"nodeType":"81","messageId":"82","endLine":14,"endColumn":23},{"ruleId":"79","severity":1,"message":"86","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":13},"@typescript-eslint/no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'UserIdParams' is defined but never used.","'PostIdParams' is defined but never used.","'axios' is defined but never used."]