{"ast":null,"code":"import { FETCH_USERS_SUCCESS, ADD_USER_SUCCESS, UPDATE_USER_SUCCESS, DELETE_USER_SUCCESS } from '../actionsType/actionsType';\nconst initialState = {\n  users: []\n};\nexport const userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_USERS_SUCCESS:\n      return {\n        ...state,\n        users: action.payload\n      };\n    case ADD_USER_SUCCESS:\n      return {\n        ...state,\n        users: [...state.users, action.payload]\n      };\n    case UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        users: state.users.map(user => user.id === action.payload.id ? action.payload : user)\n      };\n    case DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        users: state.users.filter(user => user.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\nexport default userReducer;","map":{"version":3,"names":["FETCH_USERS_SUCCESS","ADD_USER_SUCCESS","UPDATE_USER_SUCCESS","DELETE_USER_SUCCESS","initialState","users","userReducer","state","arguments","length","undefined","action","type","payload","map","user","id","filter"],"sources":["/home/developer/Downloads/Todo_user_list/src/Redux/reducers/reducers.ts"],"sourcesContent":["import {\n    FETCH_USERS_SUCCESS,\n    ADD_USER_SUCCESS ,\n    UPDATE_USER_SUCCESS, \n    DELETE_USER_SUCCESS\n     } from '../actionsType/actionsType'\n    \n  const initialState = {\n    users: [],\n  };\n  \n   export const userReducer = (state = initialState, action:any) => {\n    switch (action.type) {\n      case FETCH_USERS_SUCCESS:\n        return {\n          ...state,\n          users: action.payload,\n        };\n      case ADD_USER_SUCCESS:\n        return {\n          ...state,\n          users: [...state.users, action.payload],\n        };\n      case UPDATE_USER_SUCCESS:\n        return {\n          ...state,\n          users: state.users.map((user) => (user.id === action.payload.id ? action.payload : user)),\n        };\n      case DELETE_USER_SUCCESS:\n        return {\n          ...state,\n          users: state.users.filter((user) => user.id !== action.payload),\n        };\n      default:\n        return state;\n    }\n  };\n  \n  export default userReducer;\n  "],"mappings":"AAAA,SACIA,mBAAmB,EACnBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,QACX,4BAA4B;AAEtC,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAEA,OAAO,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAsC;EAAA,IAArCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAU,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3D,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKZ,mBAAmB;MACtB,OAAO;QACL,GAAGO,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IACH,KAAKZ,gBAAgB;MACnB,OAAO;QACL,GAAGM,KAAK;QACRF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAEM,MAAM,CAACE,OAAO;MACxC,CAAC;IACH,KAAKX,mBAAmB;MACtB,OAAO;QACL,GAAGK,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACS,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GAAGL,MAAM,CAACE,OAAO,GAAGE,IAAK;MAC1F,CAAC;IACH,KAAKZ,mBAAmB;MACtB,OAAO;QACL,GAAGI,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACY,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MAChE,CAAC;IACH;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}