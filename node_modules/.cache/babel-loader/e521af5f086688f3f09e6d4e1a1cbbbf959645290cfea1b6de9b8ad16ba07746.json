{"ast":null,"code":"import axios from \"axios\";\n// import Posts from \"../../components/Post/Post\";\nimport { FETCH_USERS_SUCCESS, ADD_USER_SUCCESS, UPDATE_USER_SUCCESS, DELETE_USER_SUCCESS, FETCH_POSTS_SUCCESS, FETCH_TODOS_SUCCESS, FETCH_COMMENTS_SUCCESS } from \"../actionsType/actionsType\";\n\n// import { Post } from '../components/Posts';\n\n// Action Creators\nexport const fetchUsersSuccess = users => ({\n  type: FETCH_USERS_SUCCESS,\n  payload: users\n});\nexport const addUserSuccess = user => ({\n  type: ADD_USER_SUCCESS,\n  payload: user\n});\nexport const updateUserSuccess = user => ({\n  type: UPDATE_USER_SUCCESS,\n  payload: user\n});\nexport const deleteUserSuccess = userId => ({\n  type: DELETE_USER_SUCCESS,\n  payload: userId\n});\n\n// Thunk to fetch users\nexport const fetchUsers = () => {\n  return dispatch => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      dispatch(fetchUsersSuccess(response.data));\n    }).catch(error => {\n      console.error(\"Error fetching users:\", error);\n    });\n  };\n};\n\n// Thunk to add user\nexport const addUser = user => {\n  return dispatch => {\n    axios.post(\"https://jsonplaceholder.typicode.com/users\", user).then(response => {\n      dispatch(addUserSuccess(response.data));\n    }).catch(error => {\n      console.error(\"Error adding user:\", error);\n    });\n  };\n};\n\n// Thunk to update user\nexport const updateUser = user => {\n  return dispatch => {\n    axios.put(`https://jsonplaceholder.typicode.com/users/${user.id}`, user).then(response => {\n      dispatch(updateUserSuccess(response.data));\n    }).catch(error => {\n      console.error(\"Error updating user:\", error);\n    });\n  };\n};\n\n// Thunk to delete user\nexport const deleteUser = userId => {\n  return dispatch => {\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${userId}`).then(() => {\n      dispatch(deleteUserSuccess(userId));\n    }).catch(error => {\n      console.error(\"Error deleting user:\", error);\n    });\n  };\n};\n\n//postsActions\n\nexport const fetchPostsSuccess = posts => {\n  return {\n    type: FETCH_POSTS_SUCCESS,\n    payload: posts\n  };\n};\nexport const fetchPosts = userId => {\n  return dispatch => {\n    axios.get(`https://jsonplaceholder.typicode.com/users/${userId}/posts`).then(response => {\n      dispatch(fetchPostsSuccess(response.data));\n    }).catch(error => {\n      console.error(\"Error fetching posts:\", error);\n    });\n  };\n};\n\n//todo\n\nexport const fetchTodosSuccess = posts => ({\n  type: FETCH_TODOS_SUCCESS,\n  payload: posts\n});\nexport const fetchTodos = userId => {\n  return dispatch => {\n    axios.get(`https://jsonplaceholder.typicode.com/users/${userId}/todos`).then(response => {\n      dispatch(fetchTodosSuccess(response.data));\n    }).catch(error => {\n      console.error(\"Error fetching todos:\", error);\n    });\n  };\n};\n\n// commnets\n\nexport const fetchCommentsSuccess = comments => ({\n  type: FETCH_COMMENTS_SUCCESS,\n  payload: comments\n});\nexport const fetchComments = postId => {\n  return dispatch => {\n    axios.get(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`).then(response => {\n      dispatch(fetchCommentsSuccess(response.data));\n    }).catch(error => {\n      console.error(\"Error fetching comments:\", error);\n    });\n  };\n};","map":{"version":3,"names":["axios","FETCH_USERS_SUCCESS","ADD_USER_SUCCESS","UPDATE_USER_SUCCESS","DELETE_USER_SUCCESS","FETCH_POSTS_SUCCESS","FETCH_TODOS_SUCCESS","FETCH_COMMENTS_SUCCESS","fetchUsersSuccess","users","type","payload","addUserSuccess","user","updateUserSuccess","deleteUserSuccess","userId","fetchUsers","dispatch","get","then","response","data","catch","error","console","addUser","post","updateUser","put","id","deleteUser","delete","fetchPostsSuccess","posts","fetchPosts","fetchTodosSuccess","fetchTodos","fetchCommentsSuccess","comments","fetchComments","postId"],"sources":["/home/developer/Downloads/Todo_user_list/src/Redux/actions/actions.ts"],"sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\n// import Posts from \"../../components/Post/Post\";\nimport {\n  FETCH_USERS_SUCCESS,\n  ADD_USER_SUCCESS,\n  UPDATE_USER_SUCCESS,\n  DELETE_USER_SUCCESS,\n  FETCH_POSTS_SUCCESS,\n  FETCH_TODOS_SUCCESS,\n  FETCH_COMMENTS_SUCCESS \n} from \"../actionsType/actionsType\";\n\n\n// import { Post } from '../components/Posts';\n\n// Action Creators\nexport const fetchUsersSuccess = (users: any) => ({\n  type: FETCH_USERS_SUCCESS,\n  payload: users,\n});\n\nexport const addUserSuccess = (user: any) => ({\n  type: ADD_USER_SUCCESS,\n  payload: user,\n});\n\nexport const updateUserSuccess = (user: any) => ({\n  type: UPDATE_USER_SUCCESS,\n  payload: user,\n});\n\nexport const deleteUserSuccess = (userId: any) => ({\n  type: DELETE_USER_SUCCESS,\n  payload: userId,\n});\n\n// Thunk to fetch users\nexport const fetchUsers = () => {\n  return (dispatch: any) => {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => {\n        dispatch(fetchUsersSuccess(response.data));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching users:\", error);\n      });\n  };\n};\n\n// Thunk to add user\nexport const addUser = (user: any) => {\n  return (dispatch: any) => {\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/users\", user)\n      .then((response) => {\n        dispatch(addUserSuccess(response.data));\n      })\n      .catch((error) => {\n        console.error(\"Error adding user:\", error);\n      });\n  };\n};\n\n// Thunk to update user\nexport const updateUser = (user: any) => {\n  return (dispatch: any) => {\n    axios\n      .put(`https://jsonplaceholder.typicode.com/users/${user.id}`, user)\n      .then((response) => {\n        dispatch(updateUserSuccess(response.data));\n      })\n      .catch((error) => {\n        console.error(\"Error updating user:\", error);\n      });\n  };\n};\n\n// Thunk to delete user\nexport const deleteUser = (userId: any) => {\n  return (dispatch: any) => {\n    axios\n      .delete(`https://jsonplaceholder.typicode.com/users/${userId}`)\n      .then(() => {\n        dispatch(deleteUserSuccess(userId));\n      })\n      .catch((error) => {\n        console.error(\"Error deleting user:\", error);\n      });\n  };\n};\n\n//postsActions\n\n\n\nexport const fetchPostsSuccess = (posts: any) => {\n  return {\n    type: FETCH_POSTS_SUCCESS,\n    payload: posts,\n  };\n};\n\nexport const fetchPosts = (userId: string) => {\n  return (dispatch: Dispatch) => {\n    axios\n      .get(`https://jsonplaceholder.typicode.com/users/${userId}/posts`)\n      .then((response) => {\n        dispatch(fetchPostsSuccess(response.data));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching posts:\", error);\n      });\n  };\n};\n\n\n\n\n//todo\n\n\n\n\n\nexport const fetchTodosSuccess = (posts: any)=> ({\n  type: FETCH_TODOS_SUCCESS,\n  payload: posts,\n});\n\nexport const fetchTodos = (userId: number) => {\n  return (dispatch: Dispatch) => {\n    axios\n      .get(`https://jsonplaceholder.typicode.com/users/${userId}/todos`)\n      .then((response) => {\n        dispatch(fetchTodosSuccess(response.data));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching todos:\", error);\n      });\n  };\n};\n\n// commnets\n\n\n\n\n\n\ninterface Comment {\n  id: number;\n  postId: number;\n  name: string;\n  email: string;\n  body: string;\n}\n\nexport const fetchCommentsSuccess = (comments: any)=> ({\n  type: FETCH_COMMENTS_SUCCESS,\n  payload: comments,\n});\n\nexport const fetchComments = (postId: number) => {\n  return (dispatch: Dispatch) => {\n    axios\n      .get(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`)\n      .then((response) => {\n        dispatch(fetchCommentsSuccess(response.data));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching comments:\", error);\n      });\n  };\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB;AACA,SACEC,mBAAmB,EACnBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,QACjB,4BAA4B;;AAGnC;;AAEA;AACA,OAAO,MAAMC,iBAAiB,GAAIC,KAAU,KAAM;EAChDC,IAAI,EAAET,mBAAmB;EACzBU,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,cAAc,GAAIC,IAAS,KAAM;EAC5CH,IAAI,EAAER,gBAAgB;EACtBS,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,iBAAiB,GAAID,IAAS,KAAM;EAC/CH,IAAI,EAAEP,mBAAmB;EACzBQ,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,iBAAiB,GAAIC,MAAW,KAAM;EACjDN,IAAI,EAAEN,mBAAmB;EACzBO,OAAO,EAAEK;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAQC,QAAa,IAAK;IACxBlB,KAAK,CACFmB,GAAG,CAAC,4CAA4C,CAAC,CACjDC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,QAAQ,CAACV,iBAAiB,CAACa,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAME,OAAO,GAAIb,IAAS,IAAK;EACpC,OAAQK,QAAa,IAAK;IACxBlB,KAAK,CACF2B,IAAI,CAAC,4CAA4C,EAAEd,IAAI,CAAC,CACxDO,IAAI,CAAEC,QAAQ,IAAK;MAClBH,QAAQ,CAACN,cAAc,CAACS,QAAQ,CAACC,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EACN,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAIf,IAAS,IAAK;EACvC,OAAQK,QAAa,IAAK;IACxBlB,KAAK,CACF6B,GAAG,CAAE,8CAA6ChB,IAAI,CAACiB,EAAG,EAAC,EAAEjB,IAAI,CAAC,CAClEO,IAAI,CAAEC,QAAQ,IAAK;MAClBH,QAAQ,CAACJ,iBAAiB,CAACO,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMO,UAAU,GAAIf,MAAW,IAAK;EACzC,OAAQE,QAAa,IAAK;IACxBlB,KAAK,CACFgC,MAAM,CAAE,8CAA6ChB,MAAO,EAAC,CAAC,CAC9DI,IAAI,CAAC,MAAM;MACVF,QAAQ,CAACH,iBAAiB,CAACC,MAAM,CAAC,CAAC;IACrC,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;AACH,CAAC;;AAED;;AAIA,OAAO,MAAMS,iBAAiB,GAAIC,KAAU,IAAK;EAC/C,OAAO;IACLxB,IAAI,EAAEL,mBAAmB;IACzBM,OAAO,EAAEuB;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,UAAU,GAAInB,MAAc,IAAK;EAC5C,OAAQE,QAAkB,IAAK;IAC7BlB,KAAK,CACFmB,GAAG,CAAE,8CAA6CH,MAAO,QAAO,CAAC,CACjEI,IAAI,CAAEC,QAAQ,IAAK;MAClBH,QAAQ,CAACe,iBAAiB,CAACZ,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;AACH,CAAC;;AAKD;;AAMA,OAAO,MAAMY,iBAAiB,GAAIF,KAAU,KAAK;EAC/CxB,IAAI,EAAEJ,mBAAmB;EACzBK,OAAO,EAAEuB;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAIrB,MAAc,IAAK;EAC5C,OAAQE,QAAkB,IAAK;IAC7BlB,KAAK,CACFmB,GAAG,CAAE,8CAA6CH,MAAO,QAAO,CAAC,CACjEI,IAAI,CAAEC,QAAQ,IAAK;MAClBH,QAAQ,CAACkB,iBAAiB,CAACf,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;AACH,CAAC;;AAED;;AAeA,OAAO,MAAMc,oBAAoB,GAAIC,QAAa,KAAK;EACrD7B,IAAI,EAAEH,sBAAsB;EAC5BI,OAAO,EAAE4B;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAIC,MAAc,IAAK;EAC/C,OAAQvB,QAAkB,IAAK;IAC7BlB,KAAK,CACFmB,GAAG,CAAE,8CAA6CsB,MAAO,WAAU,CAAC,CACpErB,IAAI,CAAEC,QAAQ,IAAK;MAClBH,QAAQ,CAACoB,oBAAoB,CAACjB,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}